{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\component\\\\poll_list\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getPollRq } from \"../../redux/action\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Addpoll from \"../add\";\nimport moment from \"moment\";\nPoll.propTypes = {};\n\nfunction Poll(props) {\n  useEffect(() => props.getPoll(), []);\n\n  const showListPoll = () => {\n    if (props.poll.length > 0) {\n      return props.poll[0].map((item, i) => {\n        console.log(moment(item.created_at).format(\"YYYY/MM/DD, h:mm\"));\n        return /*#__PURE__*/React.createElement(Link, {\n          className: \"poll__item\",\n          to: `/polldetail/${item.id}`,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }\n        }, item.content), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/vote/${item.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check-circle\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Link, {\n          to: `/poll-edit/${item.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-pencil-square\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-trash-o\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        })));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.islogin.isLogin === false ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poll__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Addpoll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), showListPoll()));\n}\n\nconst mapStateToProps = state => {\n  return {\n    poll: state.poll,\n    islogin: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPoll: () => {\n      dispatch(getPollRq());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Poll);","map":{"version":3,"sources":["D:/tranning2/src/component/poll_list/index.js"],"names":["React","useEffect","PropTypes","getPollRq","connect","Link","Redirect","Addpoll","moment","Poll","propTypes","props","getPoll","showListPoll","poll","length","map","item","i","console","log","created_at","format","id","content","islogin","isLogin","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,cAAP;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEAC,IAAI,CAACC,SAAL,GAAiB,EAAjB;;AAEA,SAASD,IAAT,CAAcE,KAAd,EAAqB;AACnBV,EAAAA,SAAS,CAAC,MAAMU,KAAK,CAACC,OAAN,EAAP,EAAwB,EAAxB,CAAT;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIF,KAAK,CAACG,IAAN,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAOJ,KAAK,CAACG,IAAN,CAAW,CAAX,EAAcE,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACS,IAAI,CAACI,UAAN,CAAN,CAAwBC,MAAxB,CAA+B,kBAA/B,CAAZ;AACA,4BACE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,EAAE,EAAG,eAAcL,IAAI,CAACM,EAAG,EAAxD;AAA2D,UAAA,GAAG,EAAEL,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACO,OAAT,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQP,IAAI,CAACM,EAAG,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,KAAK,EAAC,oBAAT;AAA8B,yBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,eAIE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAG,cAAaN,IAAI,CAACM,EAAG,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,KAAK,EAAC,qBAAT;AAA+B,yBAAY,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAJF,eAOE;AAAG,UAAA,KAAK,EAAC,eAAT;AAAyB,yBAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CAFF,CADF;AAcD,OAhBM,CAAP;AAiBD;AACF,GApBD;;AAsBA,sBACE,0CACGZ,KAAK,CAACc,OAAN,CAAcC,OAAd,KAA0B,KAA1B,gBACC,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGb,YAAY,EAJf,CAJJ,CADF;AAcD;;AAED,MAAMc,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACd,IADP;AAELW,IAAAA,OAAO,EAAEG,KAAK,CAACC;AAFV,GAAP;AAID,CALD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnB,IAAAA,OAAO,EAAE,MAAM;AACbmB,MAAAA,QAAQ,CAAC5B,SAAS,EAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeC,OAAO,CAACuB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getPollRq } from \"../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Addpoll from \"../add\";\r\nimport moment from \"moment\";\r\n\r\nPoll.propTypes = {};\r\n\r\nfunction Poll(props) {\r\n  useEffect(() => props.getPoll(), []);\r\n\r\n  const showListPoll = () => {\r\n    if (props.poll.length > 0) {\r\n      return props.poll[0].map((item, i) => {\r\n        console.log(moment(item.created_at).format(\"YYYY/MM/DD, h:mm\"));\r\n        return (\r\n          <Link className=\"poll__item\" to={`/polldetail/${item.id}`} key={i}>\r\n            <p>{item.content}</p>\r\n            <div>\r\n              <Link to={`/vote/${item.id}`}>\r\n                <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n              <Link to={`/poll-edit/${item.id}`}>\r\n                <i class=\"fa fa-pencil-square\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n              <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n            </div>\r\n          </Link>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.islogin.isLogin === false ? (\r\n        <Redirect to=\"/\"></Redirect>\r\n      ) : (\r\n        <div className=\"poll\">\r\n          <div className=\"poll__form\">\r\n            <Addpoll></Addpoll>\r\n          </div>\r\n          {showListPoll()}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    poll: state.poll,\r\n    islogin: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPoll: () => {\r\n      dispatch(getPollRq());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Poll);\r\n"]},"metadata":{},"sourceType":"module"}