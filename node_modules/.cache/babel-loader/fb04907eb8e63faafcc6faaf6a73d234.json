{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\component\\\\edit\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { acGetItemPoll, addItemQuestionLocal, addItemQuestionServer, editQuestionRq, deleteQuestion } from \"../../redux/action\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { Redirect } from \"react-router\";\nEdit.propTypes = {};\n\nfunction Edit(props) {\n  const [valueInput, setValueInput] = useState(\"\");\n  const [activeEdit, setActiveEdit] = useState(false);\n  const [idEdit, setIdEdit] = useState();\n  const [valueContent, setValueContent] = useState(\"\");\n  const [activeContent, setActiveContent] = useState(false);\n  useEffect(() => {\n    const id = props.match.match.params.id;\n    props.getItemPoll(id);\n  }, []);\n  useEffect(() => {\n    async function showValueInput() {\n      const data = await props.poll_item.content;\n      return setValueContent(data);\n    }\n\n    showValueInput();\n  }, []);\n\n  const handleEditPoll = (item, id) => {\n    setActiveEdit(true);\n    setValueInput(item);\n    setIdEdit(id);\n  };\n\n  const showItemQuestionPoll = () => {\n    if (props.poll_item) {\n      // if (props.poll_item.poll_question) {\n      //   return setValueContent(props.poll_item.content);\n      // }\n      if (props.poll_item.poll_question) {\n        return props.poll_item.poll_question.map((item, i) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"edit__main-item\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"edit__main-name\",\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }\n          }, item.content), /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-pencil edit__main-icon\",\n            \"aria-hidden\": \"true\",\n            onClick: () => handleEditPoll(item.content, item.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-times edit__main-icon\",\n            \"aria-hidden\": \"true\",\n            onClick: () => deleteQuestion(item.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }\n          }));\n        });\n      }\n    }\n  };\n\n  const deleteQuestion = id => {\n    props.deleteQuestion(id);\n  };\n\n  const handleChangeInput = e => {\n    setValueInput(e.target.value);\n  };\n\n  const addQuestionLocal = () => {\n    if (activeEdit === false) {\n      const data = {\n        content: valueInput\n      };\n      props.addQuestion(data);\n      setValueInput(\"\");\n    } else {\n      props.editQuestion(valueInput, idEdit);\n      setActiveEdit(false);\n      setValueInput(\"\");\n    }\n  };\n\n  const addItemQuestion = () => {\n    const arr = props.poll_item.poll_question;\n    const arrMapped = arr.map(item => {\n      return item.content;\n    });\n    const id = props.match.match.params.id;\n    const data = {\n      content: valueContent,\n      questions: arrMapped\n    };\n    props.addQuestionServer(id, data);\n    setActiveContent(false);\n    props.match.history.push(\"/poll\");\n  };\n\n  const handleAddOrEdit = () => {\n    if (activeEdit === false) {\n      return \"Add\";\n    } else {\n      return \"Edit\";\n    }\n  };\n\n  const handleChangeContent = e => {\n    setValueContent(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit__main-content\",\n    value: valueContent,\n    onChange: handleChangeContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__main-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit__main-input\",\n    placeholder: \"Add option\",\n    value: valueInput,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit__main-btn\",\n    onClick: addQuestionLocal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, handleAddOrEdit())), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, showItemQuestionPoll())), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit__btn\",\n    onClick: addItemQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Create\"));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItemPoll: id => {\n      return dispatch(acGetItemPoll(id));\n    },\n    addQuestion: data => {\n      return dispatch(addItemQuestionLocal(data));\n    },\n    addQuestionServer: (id, data) => {\n      return dispatch(addItemQuestionServer(id, data));\n    },\n    editQuestion: (data, id) => {\n      return dispatch(editQuestionRq(data, id));\n    },\n    deleteQuestion: id => {\n      return dispatch(deleteQuestion(id));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    poll_item: state.poll_item\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["D:/tranning2/src/component/edit/index.js"],"names":["React","useEffect","useState","PropTypes","acGetItemPoll","addItemQuestionLocal","addItemQuestionServer","editQuestionRq","deleteQuestion","connect","Redirect","Edit","propTypes","props","valueInput","setValueInput","activeEdit","setActiveEdit","idEdit","setIdEdit","valueContent","setValueContent","activeContent","setActiveContent","id","match","params","getItemPoll","showValueInput","data","poll_item","content","handleEditPoll","item","showItemQuestionPoll","poll_question","map","i","handleChangeInput","e","target","value","addQuestionLocal","addQuestion","editQuestion","addItemQuestion","arr","arrMapped","questions","addQuestionServer","history","push","handleAddOrEdit","handleChangeContent","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  acGetItemPoll,\r\n  addItemQuestionLocal,\r\n  addItemQuestionServer,\r\n  editQuestionRq,\r\n  deleteQuestion,\r\n} from \"../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nEdit.propTypes = {};\r\n\r\nfunction Edit(props) {\r\n  const [valueInput, setValueInput] = useState(\"\");\r\n  const [activeEdit, setActiveEdit] = useState(false);\r\n  const [idEdit, setIdEdit] = useState();\r\n  const [valueContent, setValueContent] = useState(\"\");\r\n  const [activeContent, setActiveContent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const id = props.match.match.params.id;\r\n    props.getItemPoll(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function showValueInput() {\r\n      const data = await props.poll_item.content;\r\n      return setValueContent(data);\r\n    }\r\n    showValueInput();\r\n  }, []);\r\n\r\n  const handleEditPoll = (item, id) => {\r\n    setActiveEdit(true);\r\n    setValueInput(item);\r\n    setIdEdit(id);\r\n  };\r\n\r\n  const showItemQuestionPoll = () => {\r\n    if (props.poll_item) {\r\n      // if (props.poll_item.poll_question) {\r\n      //   return setValueContent(props.poll_item.content);\r\n      // }\r\n      if (props.poll_item.poll_question) {\r\n        return props.poll_item.poll_question.map((item, i) => {\r\n          return (\r\n            <div className=\"edit__main-item\">\r\n              <p className=\"edit__main-name\" key={i}>\r\n                {item.content}\r\n              </p>\r\n              <i\r\n                class=\"fa fa-pencil edit__main-icon\"\r\n                aria-hidden=\"true\"\r\n                onClick={() => handleEditPoll(item.content, item.id)}\r\n              ></i>\r\n              <i\r\n                class=\"fa fa-times edit__main-icon\"\r\n                aria-hidden=\"true\"\r\n                onClick={() => deleteQuestion(item.id)}\r\n              ></i>\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteQuestion = (id) => {\r\n    props.deleteQuestion(id);\r\n  };\r\n\r\n  const handleChangeInput = (e) => {\r\n    setValueInput(e.target.value);\r\n  };\r\n  const addQuestionLocal = () => {\r\n    if (activeEdit === false) {\r\n      const data = { content: valueInput };\r\n      props.addQuestion(data);\r\n      setValueInput(\"\");\r\n    } else {\r\n      props.editQuestion(valueInput, idEdit);\r\n      setActiveEdit(false);\r\n      setValueInput(\"\");\r\n    }\r\n  };\r\n\r\n  const addItemQuestion = () => {\r\n    const arr = props.poll_item.poll_question;\r\n    const arrMapped = arr.map((item) => {\r\n      return item.content;\r\n    });\r\n    const id = props.match.match.params.id;\r\n    const data = { content: valueContent, questions: arrMapped };\r\n    props.addQuestionServer(id, data);\r\n    setActiveContent(false);\r\n    props.match.history.push(\"/poll\");\r\n  };\r\n  const handleAddOrEdit = () => {\r\n    if (activeEdit === false) {\r\n      return \"Add\";\r\n    } else {\r\n      return \"Edit\";\r\n    }\r\n  };\r\n\r\n  const handleChangeContent = (e) => {\r\n    setValueContent(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit\">\r\n      <div className=\"edit__main\">\r\n        <input\r\n          className=\"edit__main-content\"\r\n          value={valueContent}\r\n          onChange={handleChangeContent}\r\n        ></input>\r\n        <div className=\"edit__main-control\">\r\n          <input\r\n            className=\"edit__main-input\"\r\n            placeholder=\"Add option\"\r\n            value={valueInput}\r\n            onChange={handleChangeInput}\r\n          ></input>\r\n          <button className=\"edit__main-btn\" onClick={addQuestionLocal}>\r\n            {handleAddOrEdit()}\r\n          </button>\r\n        </div>\r\n        <div>{showItemQuestionPoll()}</div>\r\n      </div>\r\n      <button className=\"edit__btn\" onClick={addItemQuestion}>\r\n        Create\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getItemPoll: (id) => {\r\n      return dispatch(acGetItemPoll(id));\r\n    },\r\n    addQuestion: (data) => {\r\n      return dispatch(addItemQuestionLocal(data));\r\n    },\r\n    addQuestionServer: (id, data) => {\r\n      return dispatch(addItemQuestionServer(id, data));\r\n    },\r\n    editQuestion: (data, id) => {\r\n      return dispatch(editQuestionRq(data, id));\r\n    },\r\n    deleteQuestion: (id) => {\r\n      return dispatch(deleteQuestion(id));\r\n    },\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    poll_item: state.poll_item,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\r\n"]},"metadata":{},"sourceType":"module"}