{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\component\\\\poll_list\\\\index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getPollRq } from \"../../redux/action\";\nimport { connect } from \"react-redux\";\nPoll.propTypes = {};\n\nfunction Poll(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Poll\"));\n} // const mapStateToProps = state => {\n//   return {\n//     poll : state.poll\n//   }\n// }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPoll: () => {\n      dispatch(getPollRq());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Poll);","map":{"version":3,"sources":["D:/tranning2/src/component/poll_list/index.js"],"names":["React","PropTypes","getPollRq","connect","Poll","propTypes","props","mapDispatchToProps","dispatch","getPoll"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEAC,IAAI,CAACC,SAAL,GAAiB,EAAjB;;AAEA,SAASD,IAAT,CAAcE,KAAd,EAAqB;AACnB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeC,OAAO,CAAC,IAAD,EAAOI,kBAAP,CAAP,CAAkCH,IAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getPollRq } from \"../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nPoll.propTypes = {};\r\n\r\nfunction Poll(props) {\r\n  return (\r\n    <div>\r\n      <h1>Poll</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     poll : state.poll\r\n//   }\r\n// }\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPoll: () => {\r\n      dispatch(getPollRq());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Poll);\r\n"]},"metadata":{},"sourceType":"module"}