{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./component/navbar\";\nimport Home from \"./component/home/index\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./component/poll_list/index\";\nimport { getPollRq, loadingSucces } from \"./redux/action\";\nimport { Switch, Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport router from \"./router/index\";\nimport ReactLoading from \"react-loading\";\n\nfunction App(props) {\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      props.getFirstData();\n    }\n\n    props.acLoadingSucces();\n  }, []);\n\n  function showRoute(routes) {\n    let result = null;\n\n    if (props.isLogin === false) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }\n      });\n    } else {\n      if (routes.length > 0) {\n        result = routes.map((route, i) => {\n          return /*#__PURE__*/React.createElement(Route, {\n            key: i,\n            path: route.path,\n            exact: route.exact,\n            component: route.main,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }\n          });\n        });\n      }\n    }\n\n    return result;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, props.loading.loading === false ? /*#__PURE__*/React.createElement(ReactLoading, {\n    type: \"spin\",\n    color: \"#000000\",\n    className: \"poll__loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, showRoute(router))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLogin: state.user.isLogin,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFirstData: () => {\n      return dispatch(getPollRq());\n    },\n    acLoadingSucces: () => {\n      return dispatch(loadingSucces());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/tranning2/src/App.js"],"names":["React","useState","useEffect","Navbar","Home","connect","Poll","getPollRq","loadingSucces","Switch","Route","Redirect","router","ReactLoading","App","props","start","setStart","localStorage","getItem","getFirstData","acLoadingSucces","showRoute","routes","result","isLogin","length","map","route","i","path","exact","main","loading","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./component/navbar\";\nimport Home from \"./component/home/index\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./component/poll_list/index\";\nimport { getPollRq, loadingSucces } from \"./redux/action\";\nimport { Switch, Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport router from \"./router/index\";\nimport ReactLoading from \"react-loading\";\n\nfunction App(props) {\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      props.getFirstData();\n    }\n    props.acLoadingSucces();\n  }, []);\n  function showRoute(routes) {\n    let result = null;\n    if (props.isLogin === false) {\n      return <Redirect to=\"/\"></Redirect>;\n    } else {\n      if (routes.length > 0) {\n        result = routes.map((route, i) => {\n          return (\n            <Route\n              key={i}\n              path={route.path}\n              exact={route.exact}\n              component={route.main}\n            />\n          );\n        });\n      }\n    }\n\n    return result;\n  }\n\n  return (\n    <div className=\"app\">\n      {props.loading.loading === false ? (\n        <ReactLoading type=\"spin\" color=\"#000000\" className=\"poll__loading\" />\n      ) : (\n        <>\n          <Navbar></Navbar>\n          <Switch>{showRoute(router)}</Switch>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.user.isLogin,\n    loading: state.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFirstData: () => {\n      return dispatch(getPollRq());\n    },\n    acLoadingSucces: () => {\n      return dispatch(loadingSucces());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}