{"ast":null,"code":"import * as Types from \"../constant/index\";\nvar initialState = {};\n\nconst poll_item = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.GET_POLL_ITEM_SUCCES:\n      return state = action.payload;\n\n    case Types.ADD_POLL_ITEM_SUCCES:\n      state.poll_question.unshift(action.payload);\n      return { ...state\n      };\n\n    case Types.EDIT_QUESTION:\n      const index = findIndex(state.poll_question, action.payload.id);\n      state.poll_question[index].content = action.payload.data;\n      return { ...state\n      };\n\n    case Types.DELETE_SUCCES:\n      const index_delete = findIndex(state.poll_question, action.payload);\n      state = state.splice(index_delete, 1);\n      console.log(index_delete);\n\n    default:\n      return state;\n  }\n};\n\nconst findIndex = (arr, id) => {\n  if (arr.length > 0) {\n    for (let i = 0; i <= arr.length; i++) {\n      if (arr[i].id === id) {\n        return i;\n      }\n    }\n  }\n};\n\nexport default poll_item;","map":{"version":3,"sources":["D:/tranning2/src/redux/reducer/poll-item-reducer.js"],"names":["Types","initialState","poll_item","state","action","type","GET_POLL_ITEM_SUCCES","payload","ADD_POLL_ITEM_SUCCES","poll_question","unshift","EDIT_QUESTION","index","findIndex","id","content","data","DELETE_SUCCES","index_delete","splice","console","log","arr","length","i"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,mBAAvB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AACA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,KAAK,CAACM,oBAAX;AACE,aAAQH,KAAK,GAAGC,MAAM,CAACG,OAAvB;;AACF,SAAKP,KAAK,CAACQ,oBAAX;AACEL,MAAAA,KAAK,CAACM,aAAN,CAAoBC,OAApB,CAA4BN,MAAM,CAACG,OAAnC;AACA,aAAO,EAAE,GAAGJ;AAAL,OAAP;;AACF,SAAKH,KAAK,CAACW,aAAX;AACE,YAAMC,KAAK,GAAGC,SAAS,CAACV,KAAK,CAACM,aAAP,EAAsBL,MAAM,CAACG,OAAP,CAAeO,EAArC,CAAvB;AACAX,MAAAA,KAAK,CAACM,aAAN,CAAoBG,KAApB,EAA2BG,OAA3B,GAAqCX,MAAM,CAACG,OAAP,CAAeS,IAApD;AACA,aAAO,EACL,GAAGb;AADE,OAAP;;AAGF,SAAKH,KAAK,CAACiB,aAAX;AACE,YAAMC,YAAY,GAAGL,SAAS,CAACV,KAAK,CAACM,aAAP,EAAsBL,MAAM,CAACG,OAA7B,CAA9B;AACAJ,MAAAA,KAAK,GAAGA,KAAK,CAACgB,MAAN,CAAaD,YAAb,EAA2B,CAA3B,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AACF;AACE,aAAOf,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,MAAMU,SAAS,GAAG,CAACS,GAAD,EAAMR,EAAN,KAAa;AAC7B,MAAIQ,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,GAAG,CAACC,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,UAAIF,GAAG,CAACE,CAAD,CAAH,CAAOV,EAAP,KAAcA,EAAlB,EAAsB;AACpB,eAAOU,CAAP;AACD;AACF;AACF;AACF,CARD;;AAUA,eAAetB,SAAf","sourcesContent":["import * as Types from \"../constant/index\";\r\n\r\nvar initialState = {};\r\nconst poll_item = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.GET_POLL_ITEM_SUCCES:\r\n      return (state = action.payload);\r\n    case Types.ADD_POLL_ITEM_SUCCES:\r\n      state.poll_question.unshift(action.payload);\r\n      return { ...state };\r\n    case Types.EDIT_QUESTION:\r\n      const index = findIndex(state.poll_question, action.payload.id);\r\n      state.poll_question[index].content = action.payload.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case Types.DELETE_SUCCES:\r\n      const index_delete = findIndex(state.poll_question, action.payload);\r\n      state = state.splice(index_delete, 1);\r\n      console.log(index_delete);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst findIndex = (arr, id) => {\r\n  if (arr.length > 0) {\r\n    for (let i = 0; i <= arr.length; i++) {\r\n      if (arr[i].id === id) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default poll_item;\r\n"]},"metadata":{},"sourceType":"module"}