{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./component/navbar\";\nimport Home from \"./component/home/index\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./component/poll_list/index\";\nimport { getPollRq } from \"./redux/action\";\nimport { Switch, Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport router from \"./router/index\";\nimport ReactLoading from \"react-loading\";\n\nfunction App(props) {\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      props.getFirstData();\n    }\n  }, []);\n\n  function showRoute(routes) {\n    let result = null;\n\n    if (routes.length > 0) {\n      result = routes.map((route, i) => {\n        return /*#__PURE__*/React.createElement(Route, {\n          key: i,\n          path: route.path,\n          exact: route.exact,\n          component: props.isLogin === false ? /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }\n          }) : route.main,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        });\n      });\n    }\n\n    return result;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, props.loading.loading === false ? /*#__PURE__*/React.createElement(ReactLoading, {\n    type: \"spin\",\n    color: \"#000000\",\n    className: \"poll__loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, showRoute(router))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLogin: state.user.isLogin,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFirstData: () => {\n      return dispatch(getPollRq());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/tranning2/src/App.js"],"names":["React","useState","useEffect","Navbar","Home","connect","Poll","getPollRq","Switch","Route","Redirect","router","ReactLoading","App","props","start","setStart","localStorage","getItem","getFirstData","showRoute","routes","result","length","map","route","i","path","exact","isLogin","main","loading","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCJ,MAAAA,KAAK,CAACK,YAAN;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAKA,WAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAID,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACrBD,MAAAA,MAAM,GAAGD,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAc;AAChC,4BACE,oBAAC,KAAD;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,UAAA,SAAS,EACPd,KAAK,CAACe,OAAN,KAAkB,KAAlB,gBACE,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAGEJ,KAAK,CAACK,IARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,OAfQ,CAAT;AAgBD;;AACD,WAAOR,MAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACiB,OAAN,CAAcA,OAAd,KAA0B,KAA1B,gBACC,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAA0C,IAAA,SAAS,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASX,SAAS,CAACT,MAAD,CAAlB,CAFF,CAJJ,CADF;AAYD;;AAED,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,OAAO,EAAEI,KAAK,CAACC,IAAN,CAAWL,OADf;AAELE,IAAAA,OAAO,EAAEE,KAAK,CAACF;AAFV,GAAP;AAID,CALD;;AAOA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,YAAY,EAAE,MAAM;AAClB,aAAOiB,QAAQ,CAAC7B,SAAS,EAAV,CAAf;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeF,OAAO,CAAC2B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,GAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./component/navbar\";\nimport Home from \"./component/home/index\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./component/poll_list/index\";\nimport { getPollRq } from \"./redux/action\";\nimport { Switch, Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport router from \"./router/index\";\nimport ReactLoading from \"react-loading\";\n\nfunction App(props) {\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      props.getFirstData();\n    }\n  }, []);\n  function showRoute(routes) {\n    let result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, i) => {\n        return (\n          <Route\n            key={i}\n            path={route.path}\n            exact={route.exact}\n            component={\n              props.isLogin === false ? (\n                <Redirect to=\"/\"></Redirect>\n              ) : (\n                route.main\n              )\n            }\n          />\n        );\n      });\n    }\n    return result;\n  }\n\n  return (\n    <div className=\"app\">\n      {props.loading.loading === false ? (\n        <ReactLoading type=\"spin\" color=\"#000000\" className=\"poll__loading\" />\n      ) : (\n        <>\n          <Navbar></Navbar>\n          <Switch>{showRoute(router)}</Switch>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.user.isLogin,\n    loading: state.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFirstData: () => {\n      return dispatch(getPollRq());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}