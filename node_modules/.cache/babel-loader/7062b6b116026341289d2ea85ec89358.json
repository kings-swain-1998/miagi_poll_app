{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\component\\\\edit\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { acGetItemPoll } from \"../../redux/action\";\nimport { connect } from \"react-redux\";\nEdit.propTypes = {};\n\nfunction Edit(props) {\n  useEffect(() => {\n    const id = props.match.match.params.id;\n    props.getItemPoll(id);\n  }, []);\n\n  const showItemQuestionPoll = () => {\n    if (props.poll_item) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"What need to be poll ? \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, showItemQuestionPoll())));\n} // const mapStateToProps = () => {\n// }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItemPoll: id => {\n      return dispatch(acGetItemPoll(id));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    poll_item: state.poll_item\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["D:/tranning2/src/component/edit/index.js"],"names":["React","useEffect","PropTypes","acGetItemPoll","connect","Edit","propTypes","props","id","match","params","getItemPoll","showItemQuestionPoll","poll_item","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEAC,IAAI,CAACC,SAAL,GAAiB,EAAjB;;AAEA,SAASD,IAAT,CAAcE,KAAd,EAAqB;AACnBN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYA,KAAZ,CAAkBC,MAAlB,CAAyBF,EAApC;AACAD,IAAAA,KAAK,CAACI,WAAN,CAAkBH,EAAlB;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,oBAAoB,GAAG,MAAM;AACjC,QAAIL,KAAK,CAACM,SAAV,EAAqB,CACpB;AACF,GAHD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,WAAW,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,oBAAoB,EAA1B,CAHF,CAFF,CADF;AAUD,C,CAED;AAEA;;;AAEA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLJ,IAAAA,WAAW,EAAGH,EAAD,IAAQ;AACnB,aAAOO,QAAQ,CAACZ,aAAa,CAACK,EAAD,CAAd,CAAf;AACD;AAHI,GAAP;AAKD,CAND;;AAOA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,SAAS,EAAEI,KAAK,CAACJ;AADZ,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACY,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CT,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { acGetItemPoll } from \"../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nEdit.propTypes = {};\r\n\r\nfunction Edit(props) {\r\n  useEffect(() => {\r\n    const id = props.match.match.params.id;\r\n    props.getItemPoll(id);\r\n  }, []);\r\n\r\n  const showItemQuestionPoll = () => {\r\n    if (props.poll_item) {\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <p>What need to be poll ? </p>\r\n      <div>\r\n        <input placeholder=\"Add option\"></input>\r\n        <button>Add</button>\r\n        <div>{showItemQuestionPoll()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = () => {\r\n\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getItemPoll: (id) => {\r\n      return dispatch(acGetItemPoll(id));\r\n    },\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    poll_item: state.poll_item,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\r\n"]},"metadata":{},"sourceType":"module"}