{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\component\\\\edit\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { acGetItemPoll, addItemQuestionLocal, addItemQuestionServer } from \"../../redux/action\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { Redirect } from \"react-router\";\nEdit.propTypes = {};\n\nfunction Edit(props) {\n  useEffect(() => {\n    const id = props.match.match.params.id;\n    props.getItemPoll(id);\n  }, []);\n  const [valueInput, setValueInput] = useState(\"\");\n\n  const handleEditPoll = (item, id) => {\n    console.log(id);\n    setValueInput(item);\n  };\n\n  const showItemQuestionPoll = () => {\n    if (props.poll_item) {\n      if (props.poll_item.poll_question) {\n        return props.poll_item.poll_question.map((item, i) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"edit__main-item\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"edit__main-name\",\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }\n          }, item.content), /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-pencil edit__main-icon\",\n            \"aria-hidden\": \"true\",\n            onClick: () => handleEditPoll(item.content, item.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-times edit__main-icon\",\n            \"aria-hidden\": \"true\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }\n          }));\n        });\n      }\n    }\n  };\n\n  const handleChangeInput = e => {\n    setValueInput(e.target.value);\n  };\n\n  const addQuestionLocal = () => {\n    const data = {\n      content: valueInput\n    };\n    props.addQuestion(data);\n    setValueInput(\"\");\n  };\n\n  const addItemQuestion = () => {\n    const arr = props.poll_item.poll_question;\n    const arrMapped = arr.map(item => {\n      return item.content;\n    });\n    const id = props.match.match.params.id;\n    const data = {\n      questions: arrMapped\n    };\n    props.addQuestionServer(id, data);\n    props.match.history.push(\"/poll\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"edit__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"What need to be poll ? \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__main-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit__main-input\",\n    placeholder: \"Add option\",\n    value: valueInput,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit__main-btn\",\n    onClick: addQuestionLocal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, showItemQuestionPoll())), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit__btn\",\n    onClick: addItemQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Create\"));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItemPoll: id => {\n      return dispatch(acGetItemPoll(id));\n    },\n    addQuestion: data => {\n      return dispatch(addItemQuestionLocal(data));\n    },\n    addQuestionServer: (id, data) => {\n      return dispatch(addItemQuestionServer(id, data));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    poll_item: state.poll_item\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["D:/tranning2/src/component/edit/index.js"],"names":["React","useEffect","useState","PropTypes","acGetItemPoll","addItemQuestionLocal","addItemQuestionServer","connect","Redirect","Edit","propTypes","props","id","match","params","getItemPoll","valueInput","setValueInput","handleEditPoll","item","console","log","showItemQuestionPoll","poll_item","poll_question","map","i","content","handleChangeInput","e","target","value","addQuestionLocal","data","addQuestion","addItemQuestion","arr","arrMapped","questions","addQuestionServer","history","push","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  acGetItemPoll,\r\n  addItemQuestionLocal,\r\n  addItemQuestionServer,\r\n} from \"../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nEdit.propTypes = {};\r\n\r\nfunction Edit(props) {\r\n  useEffect(() => {\r\n    const id = props.match.match.params.id;\r\n    props.getItemPoll(id);\r\n  }, []);\r\n\r\n  const [valueInput, setValueInput] = useState(\"\");\r\n\r\n  const handleEditPoll = (item, id) => {\r\n    console.log(id);\r\n    setValueInput(item);\r\n  };\r\n\r\n  const showItemQuestionPoll = () => {\r\n    if (props.poll_item) {\r\n      if (props.poll_item.poll_question) {\r\n        return props.poll_item.poll_question.map((item, i) => {\r\n          return (\r\n            <div className=\"edit__main-item\">\r\n              <p className=\"edit__main-name\" key={i}>\r\n                {item.content}\r\n              </p>\r\n              <i\r\n                class=\"fa fa-pencil edit__main-icon\"\r\n                aria-hidden=\"true\"\r\n                onClick={() => handleEditPoll(item.content, item.id)}\r\n              ></i>\r\n              <i class=\"fa fa-times edit__main-icon\" aria-hidden=\"true\"></i>\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangeInput = (e) => {\r\n    setValueInput(e.target.value);\r\n  };\r\n  const addQuestionLocal = () => {\r\n    const data = { content: valueInput };\r\n    props.addQuestion(data);\r\n    setValueInput(\"\");\r\n  };\r\n\r\n  const addItemQuestion = () => {\r\n    const arr = props.poll_item.poll_question;\r\n    const arrMapped = arr.map((item) => {\r\n      return item.content;\r\n    });\r\n    const id = props.match.match.params.id;\r\n    const data = { questions: arrMapped };\r\n    props.addQuestionServer(id, data);\r\n    props.match.history.push(\"/poll\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit\">\r\n      <p className=\"edit__content\">What need to be poll ? </p>\r\n      <div className=\"edit__main\">\r\n        <div className=\"edit__main-control\">\r\n          <input\r\n            className=\"edit__main-input\"\r\n            placeholder=\"Add option\"\r\n            value={valueInput}\r\n            onChange={handleChangeInput}\r\n          ></input>\r\n          <button className=\"edit__main-btn\" onClick={addQuestionLocal}>\r\n            Add\r\n          </button>\r\n        </div>\r\n        <div>{showItemQuestionPoll()}</div>\r\n      </div>\r\n      <button className=\"edit__btn\" onClick={addItemQuestion}>\r\n        Create\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getItemPoll: (id) => {\r\n      return dispatch(acGetItemPoll(id));\r\n    },\r\n    addQuestion: (data) => {\r\n      return dispatch(addItemQuestionLocal(data));\r\n    },\r\n    addQuestionServer: (id, data) => {\r\n      return dispatch(addItemQuestionServer(id, data));\r\n    },\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    poll_item: state.poll_item,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\r\n"]},"metadata":{},"sourceType":"module"}