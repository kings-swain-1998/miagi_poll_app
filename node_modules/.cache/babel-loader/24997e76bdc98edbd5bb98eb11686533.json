{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./component/navbar\";\nimport Home from \"./component/home/index\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./component/poll_list/index\";\nimport { getPollRq, loadingSucces, loadingFail } from \"./redux/action\";\nimport { Switch, Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport router from \"./router/index\";\nimport ReactLoading from \"react-loading\";\n\nfunction App(props) {\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      props.getFirstData();\n    }\n  }, []);\n\n  function showRoute(routes) {\n    let result = null;\n\n    if (routes.length > 0) {\n      result = routes.map((route, i) => {\n        return /*#__PURE__*/React.createElement(Route, {\n          key: i,\n          path: route.path,\n          exact: route.exact,\n          component: route.main,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        });\n      });\n    }\n\n    return result;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), props.loading.loading === false ? /*#__PURE__*/React.createElement(ReactLoading, {\n    type: \"spin\",\n    color: \"#000000\",\n    className: \"poll__loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, showRoute(router))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLogin: state.user.isLogin,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFirstData: () => {\n      return dispatch(getPollRq());\n    },\n    acLoadingSucces: () => {\n      return dispatch(loadingSucces());\n    },\n    acloadingFail: () => {\n      return dispatch(loadingFail());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/tranning2/src/App.js"],"names":["React","useState","useEffect","useCallback","Navbar","Home","connect","Poll","getPollRq","loadingSucces","loadingFail","Switch","Route","Redirect","router","ReactLoading","App","props","start","setStart","localStorage","getItem","getFirstData","showRoute","routes","result","length","map","route","i","path","exact","main","loading","mapStateToProps","state","isLogin","user","mapDispatchToProps","dispatch","acLoadingSucces","acloadingFail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,WAAnC,QAAsD,gBAAtD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCJ,MAAAA,KAAK,CAACK,YAAN;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAID,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACrBD,MAAAA,MAAM,GAAGD,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAc;AAChC,4BACE,oBAAC,KAAD;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,UAAA,SAAS,EAAEH,KAAK,CAACI,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OATQ,CAAT;AAUD;;AAED,WAAOP,MAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,KAAK,CAACgB,OAAN,CAAcA,OAAd,KAA0B,KAA1B,gBACC,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAA0C,IAAA,SAAS,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASV,SAAS,CAACT,MAAD,CAAlB,CADF,CALJ,CADF;AAYD;;AAED,MAAMoB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWD,OADf;AAELH,IAAAA,OAAO,EAAEE,KAAK,CAACF;AAFV,GAAP;AAID,CALD;;AAOA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,YAAY,EAAE,MAAM;AAClB,aAAOiB,QAAQ,CAAC/B,SAAS,EAAV,CAAf;AACD,KAHI;AAILgC,IAAAA,eAAe,EAAE,MAAM;AACrB,aAAOD,QAAQ,CAAC9B,aAAa,EAAd,CAAf;AACD,KANI;AAOLgC,IAAAA,aAAa,EAAE,MAAM;AACnB,aAAOF,QAAQ,CAAC7B,WAAW,EAAZ,CAAf;AACD;AATI,GAAP;AAWD,CAZD;;AAcA,eAAeJ,OAAO,CAAC4B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtB,GAA7C,CAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./component/navbar\";\nimport Home from \"./component/home/index\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./component/poll_list/index\";\nimport { getPollRq, loadingSucces, loadingFail } from \"./redux/action\";\nimport { Switch, Route } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport router from \"./router/index\";\nimport ReactLoading from \"react-loading\";\n\nfunction App(props) {\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      props.getFirstData();\n    }\n  }, []);\n\n  function showRoute(routes) {\n    let result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, i) => {\n        return (\n          <Route\n            key={i}\n            path={route.path}\n            exact={route.exact}\n            component={route.main}\n          />\n        );\n      });\n    }\n\n    return result;\n  }\n\n  return (\n    <div className=\"app\">\n      <Navbar></Navbar>\n      {props.loading.loading === false ? (\n        <ReactLoading type=\"spin\" color=\"#000000\" className=\"poll__loading\" />\n      ) : (\n        <>\n          <Switch>{showRoute(router)}</Switch>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.user.isLogin,\n    loading: state.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFirstData: () => {\n      return dispatch(getPollRq());\n    },\n    acLoadingSucces: () => {\n      return dispatch(loadingSucces());\n    },\n    acloadingFail: () => {\n      return dispatch(loadingFail());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}