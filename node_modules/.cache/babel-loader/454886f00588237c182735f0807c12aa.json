{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\component\\\\edit\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { acGetItemPoll } from \"../../redux/action\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nEdit.propTypes = {};\n\nfunction Edit(props) {\n  useEffect(() => {\n    const id = props.match.match.params.id;\n    props.getItemPoll(id);\n  }, []);\n\n  const showItemQuestionPoll = () => {\n    console.log(props.poll_item);\n\n    if (props.poll_item) {\n      if (props.poll_item.poll_question) {\n        return props.poll_item.poll_question.map((item, i) => {\n          return /*#__PURE__*/React.createElement(\"p\", {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 18\n            }\n          }, item.content);\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"edit__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"What need to be poll ? \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__main-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit__main-input\",\n    placeholder: \"Add option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit__main-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, showItemQuestionPoll())));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItemPoll: id => {\n      return dispatch(acGetItemPoll(id));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    poll_item: state.poll_item\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["D:/tranning2/src/component/edit/index.js"],"names":["React","useEffect","PropTypes","acGetItemPoll","connect","Edit","propTypes","props","id","match","params","getItemPoll","showItemQuestionPoll","console","log","poll_item","poll_question","map","item","i","content","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,cAAP;AAEAC,IAAI,CAACC,SAAL,GAAiB,EAAjB;;AAEA,SAASD,IAAT,CAAcE,KAAd,EAAqB;AACnBN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYA,KAAZ,CAAkBC,MAAlB,CAAyBF,EAApC;AACAD,IAAAA,KAAK,CAACI,WAAN,CAAkBH,EAAlB;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,oBAAoB,GAAG,MAAM;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,SAAlB;;AACA,QAAIR,KAAK,CAACQ,SAAV,EAAqB;AACnB,UAAIR,KAAK,CAACQ,SAAN,CAAgBC,aAApB,EAAmC;AACjC,eAAOT,KAAK,CAACQ,SAAN,CAAgBC,aAAhB,CAA8BC,GAA9B,CAAkC,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpD,8BAAO;AAAG,YAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAYD,IAAI,CAACE,OAAjB,CAAP;AACD,SAFM,CAAP;AAGD;AACF;AACF,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,WAAW,EAAC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,oBAAoB,EAA1B,CALF,CAFF,CADF;AAYD;;AAED,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLX,IAAAA,WAAW,EAAGH,EAAD,IAAQ;AACnB,aAAOc,QAAQ,CAACnB,aAAa,CAACK,EAAD,CAAd,CAAf;AACD;AAHI,GAAP;AAKD,CAND;;AAOA,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,SAAS,EAAES,KAAK,CAACT;AADZ,GAAP;AAGD,CAJD;;AAMA,eAAeX,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { acGetItemPoll } from \"../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\n\r\nEdit.propTypes = {};\r\n\r\nfunction Edit(props) {\r\n  useEffect(() => {\r\n    const id = props.match.match.params.id;\r\n    props.getItemPoll(id);\r\n  }, []);\r\n\r\n  const showItemQuestionPoll = () => {\r\n    console.log(props.poll_item);\r\n    if (props.poll_item) {\r\n      if (props.poll_item.poll_question) {\r\n        return props.poll_item.poll_question.map((item, i) => {\r\n          return <p key={i}>{item.content}</p>;\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"edit\">\r\n      <p className=\"edit__content\">What need to be poll ? </p>\r\n      <div className=\"edit__main\">\r\n        <div className=\"edit__main-control\">\r\n          <input className=\"edit__main-input\" placeholder=\"Add option\"></input>\r\n          <button className=\"edit__main-btn\">Add</button>\r\n        </div>\r\n        <div>{showItemQuestionPoll()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getItemPoll: (id) => {\r\n      return dispatch(acGetItemPoll(id));\r\n    },\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    poll_item: state.poll_item,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\r\n"]},"metadata":{},"sourceType":"module"}