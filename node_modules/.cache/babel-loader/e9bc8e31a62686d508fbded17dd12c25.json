{"ast":null,"code":"var _jsxFileName = \"D:\\\\tranning2\\\\src\\\\component\\\\poll_list\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getPollRq } from \"../../redux/action\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nPoll.propTypes = {};\n\nfunction Poll(props) {\n  useEffect(() => props.getPoll(), []);\n\n  const showListPoll = () => {\n    if (props.poll.length > 0) {\n      console.log(props.poll[0]);\n      return props.poll[0].map((item, i) => {\n        console.log(item);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"poll__item\",\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }\n        }, item.content), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/polldetail/${item.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check-circle\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-pencil-square\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-trash-o\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }\n        })));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, showListPoll());\n}\n\nconst mapStateToProps = state => {\n  return {\n    poll: state.poll\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPoll: () => {\n      dispatch(getPollRq());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Poll);","map":{"version":3,"sources":["D:/tranning2/src/component/poll_list/index.js"],"names":["React","useEffect","PropTypes","getPollRq","connect","Link","Poll","propTypes","props","getPoll","showListPoll","poll","length","console","log","map","item","i","content","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEAC,IAAI,CAACC,SAAL,GAAiB,EAAjB;;AAEA,SAASD,IAAT,CAAcE,KAAd,EAAqB;AACnBP,EAAAA,SAAS,CAAC,MAAMO,KAAK,CAACC,OAAN,EAAP,EAAwB,EAAxB,CAAT;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIF,KAAK,CAACG,IAAN,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,IAAN,CAAW,CAAX,CAAZ;AACA,aAAOH,KAAK,CAACG,IAAN,CAAW,CAAX,EAAcI,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpCJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,OAAT,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAG,eAAcF,IAAI,CAACG,EAAG,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,KAAK,EAAC,oBAAT;AAA8B,yBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,eAIE;AAAG,UAAA,KAAK,EAAC,qBAAT;AAA+B,yBAAY,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE;AAAG,UAAA,KAAK,EAAC,eAAT;AAAyB,yBAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CAFF,CADF;AAYD,OAdM,CAAP;AAeD;AACF,GAnBD;;AAqBA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBT,YAAY,EAAnC,CAAP;AACD;;AAED,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADP,GAAP;AAGD,CAJD;;AAKA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,OAAO,EAAE,MAAM;AACbc,MAAAA,QAAQ,CAACpB,SAAS,EAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeC,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getPollRq } from \"../../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nPoll.propTypes = {};\r\n\r\nfunction Poll(props) {\r\n  useEffect(() => props.getPoll(), []);\r\n  const showListPoll = () => {\r\n    if (props.poll.length > 0) {\r\n      console.log(props.poll[0]);\r\n      return props.poll[0].map((item, i) => {\r\n        console.log(item);\r\n        return (\r\n          <div className=\"poll__item\" key={i}>\r\n            <p>{item.content}</p>\r\n            <div>\r\n              <Link to={`/polldetail/${item.id}`}>\r\n                <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n              <i class=\"fa fa-pencil-square\" aria-hidden=\"true\"></i>\r\n              <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return <div className=\"poll\">{showListPoll()}</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    poll: state.poll,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPoll: () => {\r\n      dispatch(getPollRq());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Poll);\r\n"]},"metadata":{},"sourceType":"module"}