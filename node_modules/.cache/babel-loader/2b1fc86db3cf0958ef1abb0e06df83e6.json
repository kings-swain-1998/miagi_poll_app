{"ast":null,"code":"import * as Types from \"../constant/index\";\nvar initialState = {};\n\nconst poll_item = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.GET_POLL_ITEM_SUCCES:\n      return state = action.payload;\n\n    case Types.ADD_POLL_ITEM_SUCCES:\n      console.log(action.payload);\n      state.poll_question.unshift(action.payload);\n      return { ...state\n      };\n\n    case Types.EDIT_QUESTION: // const index = findIndex(state.poll_question, action.payload.id);\n    // state.poll_question[index].content = action.payload.data;\n    // return {\n    //   ...state,\n    // };\n\n    case Types.DELETE_SUCCES: // const index_delete = findIndex(state.poll_question, action.payload);\n    // state.poll_question.splice(index_delete, 1);\n    // return { ...state };\n\n    default:\n      return state;\n  }\n}; // const findIndex = (arr, id) => {\n//   if (arr.length > 0) {\n//     for (let i = 0; i <= arr.length; i++) {\n//       if (arr[i].id === id) {\n//         return i;\n//       }\n//     }\n//   }\n// };\n\n\nexport default poll_item;","map":{"version":3,"sources":["D:/tranning2/src/redux/reducer/poll-item-reducer.js"],"names":["Types","initialState","poll_item","state","action","type","GET_POLL_ITEM_SUCCES","payload","ADD_POLL_ITEM_SUCCES","console","log","poll_question","unshift","EDIT_QUESTION","DELETE_SUCCES"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,mBAAvB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AACA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,KAAK,CAACM,oBAAX;AACE,aAAQH,KAAK,GAAGC,MAAM,CAACG,OAAvB;;AACF,SAAKP,KAAK,CAACQ,oBAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,OAAnB;AACAJ,MAAAA,KAAK,CAACQ,aAAN,CAAoBC,OAApB,CAA4BR,MAAM,CAACG,OAAnC;AACA,aAAO,EAAE,GAAGJ;AAAL,OAAP;;AACF,SAAKH,KAAK,CAACa,aAAX,CAPF,CAQE;AACA;AACA;AACA;AACA;;AACA,SAAKb,KAAK,CAACc,aAAX,CAbF,CAcE;AACA;AACA;;AACA;AACE,aAAOX,KAAP;AAlBJ;AAoBD,CArBD,C,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,SAAf","sourcesContent":["import * as Types from \"../constant/index\";\r\n\r\nvar initialState = {};\r\nconst poll_item = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.GET_POLL_ITEM_SUCCES:\r\n      return (state = action.payload);\r\n    case Types.ADD_POLL_ITEM_SUCCES:\r\n      console.log(action.payload);\r\n      state.poll_question.unshift(action.payload);\r\n      return { ...state };\r\n    case Types.EDIT_QUESTION:\r\n    // const index = findIndex(state.poll_question, action.payload.id);\r\n    // state.poll_question[index].content = action.payload.data;\r\n    // return {\r\n    //   ...state,\r\n    // };\r\n    case Types.DELETE_SUCCES:\r\n    // const index_delete = findIndex(state.poll_question, action.payload);\r\n    // state.poll_question.splice(index_delete, 1);\r\n    // return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const findIndex = (arr, id) => {\r\n//   if (arr.length > 0) {\r\n//     for (let i = 0; i <= arr.length; i++) {\r\n//       if (arr[i].id === id) {\r\n//         return i;\r\n//       }\r\n//     }\r\n//   }\r\n// };\r\n\r\nexport default poll_item;\r\n"]},"metadata":{},"sourceType":"module"}